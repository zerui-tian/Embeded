C51 COMPILER V8.08   JISHU                                                                 08/18/2015 17:43:42 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE JISHU
OBJECT MODULE PLACED IN jishu.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE jishu.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************
   2          * 【编写时间】： 2014年3月5日
   3          * 【作    者】： 清翔电子:03
   4          * 【版    本】： 1.0
   5          * 【网    站】： http://www.qxmcu.com/ 
   6          * 【淘宝店铺】： http://qxmcu.taobao.com/ 
   7          * 【实验平台】： QX-MCS51 单片机开发板
   8          * 【外部晶振】： 11.0592mhz     
   9          * 【主控芯片】： STC89C52
  10          * 【编译环境】： Keil μVisio3  
  11          * 【程序功能】： 模拟工厂里的产品扫描计数器。                                                                               
  12          * 【使用说明】： 用QX-MCS51实验板上的S2和S3键。
  13                          其中S2用于模拟代替扫描开关，当有产品经过时，会使S2送出低电平（本程序中是用手按下S2来模拟）
  14                          S2每按一下，便会使数码管上的计数器加一。
  15                          S3用于对计数清零。
  16          *  说明：免费开源，不提供源代码分析.
  17          **********************************************************************************/
  18          
  19          #include<reg52.h>
  20          
  21          #define uchar unsigned char 
  22          unsigned long num;
  23          uchar j,k;
  24          uchar a0,b0,c0,d0,e0,f0,g0,h0;
  25          sbit dula=P2^6;
  26          sbit wela=P2^7;
  27          sbit s2=P3^0;
  28          sbit s3=P3^1;
  29          unsigned char code table[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,
  30                                  0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0x00};
  31          
  32          void delay(uchar i)
  33          {
  34   1              for(j=i;j>0;j--)
  35   1              for(k=125;k>0;k--);
  36   1      }
  37          
  38          void display(uchar a,uchar b,uchar c,uchar d,uchar e,uchar f,uchar g,uchar h)
  39          {
  40   1         dula=0;
  41   1         P0=table[a];
  42   1         dula=1;
  43   1         dula=0;
  44   1         
  45   1         wela=0;
  46   1         P0=0xfe;
  47   1         wela=1;
  48   1         wela=0;
  49   1         delay(5);
  50   1         
  51   1         P0=table[b];
  52   1         dula=1;
  53   1         dula=0;
  54   1         
  55   1         P0=0xfd;
C51 COMPILER V8.08   JISHU                                                                 08/18/2015 17:43:42 PAGE 2   

  56   1         wela=1;
  57   1         wela=0;
  58   1         delay(5);
  59   1      
  60   1         P0=table[c];
  61   1         dula=1;
  62   1         dula=0;
  63   1         
  64   1         P0=0xfb;
  65   1         wela=1;
  66   1      
  67   1         wela=0;
  68   1         delay(5);
  69   1         
  70   1         P0=table[d];
  71   1         dula=1;
  72   1         dula=0;
  73   1         
  74   1         P0=0xf7;
  75   1         wela=1;
  76   1         wela=0;
  77   1         delay(5);
  78   1         
  79   1         P0=table[e];
  80   1         dula=1;
  81   1         dula=0;
  82   1         
  83   1         P0=0xef;
  84   1         wela=1;
  85   1         wela=0;
  86   1         delay(5);
  87   1         
  88   1         P0=table[f];
  89   1         dula=1;
  90   1         dula=0;
  91   1         
  92   1         P0=0xdf;
  93   1         wela=1;
  94   1         wela=0;
  95   1         delay(5);
  96   1      
  97   1         P0=table[g];
  98   1         dula=1;
  99   1         dula=0;
 100   1         
 101   1         P0=0xbf;
 102   1         wela=1;
 103   1         wela=0;
 104   1         delay(5);
 105   1      
 106   1         P0=table[h];
 107   1         dula=1;
 108   1         dula=0;
 109   1         
 110   1         P0=0x7f;
 111   1         wela=1;
 112   1         wela=0;
 113   1         delay(5);
 114   1      }
 115          
 116          
 117          void keyscan()
C51 COMPILER V8.08   JISHU                                                                 08/18/2015 17:43:42 PAGE 3   

 118          {
 119   1              if(s2==0)
 120   1              {
 121   2                      while(s2==0);
 122   2                      num++;
 123   2              }
 124   1              if(s3==0)
 125   1              {
 126   2                      while(s3==0);
 127   2                      num=0;
 128   2              }
 129   1      }
 130          
 131          void main()
 132          {       while(1)
 133   1              {
 134   2              keyscan();
 135   2              if(num<10)
 136   2              {
 137   3                      a0=num;b0=16;c0=16;d0=16;e0=16;f0=16;g0=16;h0=16;
 138   3              }
 139   2              else
 140   2              {
 141   3                      if(num<100)
 142   3                      {a0=num/10;b0=num%10;c0=16;d0=16;e0=16;f0=16;g0=16;h0=16;}
 143   3                      else
 144   3                      {
 145   4                              if(num<1000)
 146   4                              {a0=num/100;b0=num%100/10;c0=num%10;d0=16;e0=16;f0=16;g0=16;h0=16;}
 147   4                              else
 148   4                              {
 149   5                                      if(num<10000)
 150   5                                      {a0=num/1000;b0=num%1000/100;c0=num%100/10;d0=num%10;e0=16;f0=16;g0=16;h0=16;}
 151   5                                      else
 152   5                                      {
 153   6                                              if(num<100000)
 154   6                                              {a0=num/10000;b0=num%10000/1000;c0=num%1000/100;d0=num%100/10;e0=num%10;f0=16;g0=16;h0=16;}
 155   6                                              else
 156   6                                              {
 157   7                                                      if(num<1000000)
 158   7                                                      {a0=num/100000;b0=num%100000/10000;c0=num%10000/1000;d0=num%1000/100;e0=num%100/10;f0=num%10;g0=16;h
             -0=16;}
 159   7                                                      else
 160   7                                                      {
 161   8                                                          if(num<10000000)
 162   8                                                          {a0=num/1000000;b0=num%1000000/100000;c0=num%100000/10000;d0=num%10000/1000;e0=num%1000/100;f0=n
             -um%100/10;g0=num%10;h0=16;}  
 163   8                                                              else
 164   8                                                              {
 165   9                                                                  if(num<100000000)
 166   9                                                              {a0=num/10000000;b0=num%10000000/1000000;c0=num%1000000/100000;d0=num%100000/10000;e0=num%10
             -000/1000;f0=num%1000/100;g0=num%100/10;h0=num%10;}
 167   9                                                              } 
 168   8                                                      }
 169   7                                              }
 170   6                                      }
 171   5                              }
 172   4                      }
 173   3              }
 174   2              display(a0,b0,c0,d0,e0,f0,g0,h0);
 175   2              }
 176   1      }
C51 COMPILER V8.08   JISHU                                                                 08/18/2015 17:43:42 PAGE 4   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1532    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
